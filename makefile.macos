CC=clang
CFLAGS=-Wall -Os
CPP=clang++
CPPFLAGS=$(CFLAGS) -std=c++11
LDFLAGS=
UZDIR=uzlib/src
UZOBJS=$(UZDIR)/adler32.o $(UZDIR)/crc32.o $(UZDIR)/defl_static.o $(UZDIR)/genlz77.o $(UZDIR)/tinfgzip.o $(UZDIR)/tinflate.o $(UZDIR)/tinfzlib.o 
AESDIR=tiny-AES128-C
AESOBJS=$(AESDIR)/aes.o
OBJS=base64.o crc32.o md5.o hs_http.o hs_crypt.o hs_compress.o hs_base64.o hs_misc.o
DEPS=hs_exception.h

.PHONY: clean

all: hs

################################################################################

hs: hs_main.cpp $(DEPS) $(OBJS) $(UZOBJS) $(AESOBJS)
	$(CPP) $(CPPFLAGS) hs_main.cpp $(OBJS) $(UZOBJS) $(AESOBJS) -o $@ $(LDFLAGS)

hs_http.o: hs_http.cpp hs_http.h $(DEPS)
	$(CPP) $(CPPFLAGS) hs_http.cpp -c -Ihttp-client-c/src

hs_crypt.o: hs_crypt.cpp hs_crypt.h $(DEPS)
	$(CPP) $(CPPFLAGS) hs_crypt.cpp -c -Itiny-AES128-C

hs_compress.o: hs_compress.cpp hs_compress.h $(DEPS)
	$(CPP) $(CPPFLAGS) hs_compress.cpp -c -Iuzlib/src

hs_base64.o: hs_base64.cpp hs_base64.h $(DEPS)
	$(CPP) $(CPPFLAGS) hs_base64.cpp -c

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(UZDIR)/%.o: $(UZDIR)/%.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(AESDIR)/%.o: $(AESDIR)/%.c
	$(CC) $(CFLAGS) -c -o $@ $<


################################################################################

clean:
	rm -f tiny-AES128-C/*.o
	rm -f uzlib/src/*.o
	rm -f *.o
	rm -f hs
